name: Deploy

on:
  push:
    branches: [chore/monorepo]
    paths:
      - "packages/skyhelper/**"
      - "packages/skyhelper-jobs/**"
  workflow_dispatch:

jobs:
  deploy_skyhelper:
    if: contains(github.event.head_commit.modified, 'packages/skyhelper/')
    runs-on: self-hosted
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Deploy SkyHelper Bot
        run: cd packages/skyhelper && echo "Bot will be deployed"
        env:
          TOKEN: ${{ secrets.TOKEN }}
          NODE_ENV: production
          NODE_OPTIONS: --enable-source-maps
          MONGO_CONNECTION: ${{secrets.MONGO_CONNECTION}}
          CLIENT_ID: ${{secrets.CLIENT_ID}}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_RELEASE: skyhelper@${{ github.sha }}
          PUBLIC_KEY: ${{secrets.PUBLIC_KEY}}
          DBL_TOKEN: ${{secrets.DBL_TOKEN}}
          BUG_REPORTS: ${{secrets.BUG_REPORTS}}
          COMMANDS_USED: ${{secrets.COMMANDS_USED}}
          CONTACT_US: ${{secrets.COMMANDS_USED}}
          ERROR_LOGS: ${{secrets.ERROR_LOGS}}
          GUILD: ${{secrets.GUILD}}
          READY_LOGS: ${{secrets.READY_LOGS}}
          SUGGESTION: ${{secrets.SUGGESTION}}
          TOPGG_TOKEN: ${{secrets.TOPGG_TOKEN}}

      - name: Cleanup Unused Images
        run: docker image prune -f

  deploy_skyhelper_jobs:
    if: contains(github.event.head_commit.modified, 'packages/skyhelper-jobs/')
    runs-on: self-hosted
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Deploy SkyHelper Jobs
        run: cd packages/skyhelper-jobs && echo "Jobs will be deployed"
        env:
          TOKEN: ${{ secrets.TOKEN }}
          MONGO_CONNECTION: ${{secrets.MONGO_CONNECTION}}
          ERROR_WEBHOOK: $${{secrets.ERROR_LOGS}}
          NODE_ENV: production

      - name: Cleanup Unused Images
        run: docker image prune -f
